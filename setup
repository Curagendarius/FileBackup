#!/bin/bash
#Инсталятор скрипта резервного копирования


##############################
###  ТОЧКА СТАРТА СКРИПТА  ###
##############################

#Определяем путь запуска скрипта
# current path resolver from http://stackoverflow.com/a/246128
SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do
  DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
  SOURCE="$(readlink "$SOURCE")"
  [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE"
done
INSTALL_DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"

#Обычное расположение файлов логов
BackupLogDef="/var/log/FileBackup.log"
ErrorLogDef="/var/log/FileBackupERROR.log"
ErrorNotifyLogDef="/var/log/FileBackupNotifyERROR.log"

#Спрашиваем надо провести install или uninstall
echo "Какую процедуру надо произвести:"
echo "	установить скрипт (введите 1)"
echo "	деинсталировать скрипт (введите 2)"
read InstallDeinstall
case $InstallDeinstall in
	"1" )
	#
	# УСТАНОВКА
	#

	#Указываем для дополнительных скриптов, что запускаемся в режиме установки
	WorkMission="install"

	if [ -a $$INSTALL_DIR/config.cfg ]
	then
		#Если файл настроек существует, то 
		# - предупреждаем что он есть и спрашиваем стоит ли продолжать установку;
		# - если установку продолжать стоит, то читаем этот файл и выводим настройки логов из него

		echo "Обнаружен файл конфигурации, возможно скрипт уже установлен." 
		echo "Если вы хотите продолжить устновку с использованием этого файла конфигурации то введите «y»"
		echo "Если вы хотите прервать установку, то введите «n»"
		case "$item" in
	   	y|Y) echo "Ввели «y», продолжаем установку..."
			. $INSTALL_DIR/config.cfg
	       	;;
	   	n|N) echo "Ввели «n», установка прервана..."
	       	exit 1
	       	;;
	   	*) echo "Ничего не ввели. Выполняем действие по умолчанию... (заканчиваем работу)"
			exit 1
	       	;;
		esac
	else
		#Задаем настройки расположения логов по умолчанию
		BackupLog=$BackupLogDef
		ErrorLog=$ErrorLogDef
		ErrorNotifyLog=$ErrorNotifyLogDef
	fi
	

	echo "Проверьте настройки скрипта резервного копирования:"
	echo " 1: Путь расположения скрипта: "$INSTALL_DIR
	echo " 2: Имя пользователя под которым будет выполнятся скрипт: "$USER
	echo " 3: Логфайл сессии резервного копирования: "$BackupLog
	echo " 4: Логфайл ошибок сессии резервного копирования: "$ErrorLog
	echo " 5: Логфайл ошибок доставки сообщений о сбоях скрипта резервного копирования: "$ErrorNotifyLog
	echo ""
	echo "Если настройки верны и вы хотите продолжить установку нажните /y/"
	echo "Eсли настроки расположения логов вас не устраивают и вы хотите их изменить то нажмите /n/"
	echo "(после заверения скрипта вы сможет отредактировать их в файле "$INSTALL_DIR/config.cfg" и запустить скрипт установки еще раз)"

	#пишем файл config.cfg
	echo "#!/bin/bash" > $INSTALL_DIR/config.cfg
	echo "" >> $INSTALL_DIR/config.cfg
	echo "#Файлы лога архивации последней сессии" >> $INSTALL_DIR/config.cfg
	echo "BackupLog="$BackupLog >> $INSTALL_DIR/config.cfg
	echo "ErrorLog="$ErrorLog >> $INSTALL_DIR/config.cfg
	echo "ErrorNotifyLog="$ErrorNotifyLog >> $INSTALL_DIR/config.cfg


	read item
	case "$item" in
	   	y|Y) echo "Ввели «y», продолжаем..."
	       	;;
	   	n|N) echo "Ввели «n», завершаем..."
	       	exit 1
	       	;;
	   	*) echo "Ничего не ввели. Выполняем действие по умолчанию... (заканчиваем работу)"
			exit 1
	       	;;
	esac


	#Создаем логфайл сессии резервного копирования
	echo "проверяем сущестует ли такой файл "$BackupLog

	if [ -a $BackupLog ]
	then
		echo "Файл с таким именем уже существует."
		exit 1
	fi
	#Создание файла лога сессии резервного копирования 
	`cat</dev/null>$BackupLog`
	if [ -a $BackupLog ] 
	then
		echo "Файл "$BackupLog" успешно создан"
	else
		echo "Не получается создать файл с именем "$BackupLog
		exit 1
		
	fi
	# Задаем права на чтение и редактирование для всех (666) на логфайл сессии резервного копирования
	`chmod 666 $BackupLog`
	if [ $? -ne 0 ];
	then 
		echo "Не удается задать права на логфайл "$BackupLog
		exit 1
	fi


	#Создаем логфайл ошибок сессии резервного копирования
	echo "проверяем сущестует ли такой файл "$ErrorLog

	if [ -a $ErrorLog ]
	then
		echo "Файл с таким именем уже существует."
		exit 1
	fi
	#Создание файла лога сессии резервного копирования 
	#
	`cat</dev/null>$ErrorLog`
	if [ -a $ErrorLog ]; 
	then
		echo "Файл "$ErrorLog" успешно создан"
	else
		echo "Не получается создать файл с именем "$ErrorLog
		exit 1
		
	fi
	# Задаем права на чтение и редактирование для всех (666) на логфайл ошибок сессии резервного копирования
	`chmod 666 $ErrorLog`
	if [ $? -ne 0 ];
	then 
		echo "Не удается задать права на логфайл "$ErrorLog
		exit 1
	fi


	#Создаем логфайл ошибок доставки сообщений о сбоях скрипта резервного копирования
	echo "Проверяем сущестует ли такой файл "$ErrorNotifyLog

	if [ -a $ErrorNotifyLog ]
	then
		echo "Файл с таким именем уже существует."
		exit 1
	fi
	#Создание ошибок доставки сообщений о сбоях скрипта резервного копирования 
	#
	`cat</dev/null>$ErrorNotifyLog`
	if [ -a $ErrorNotifyLog ]; 
	then
		echo "Файл "$ErrorNotifyLog" успешно создан"
	else
		echo "Не получается создать файл с именем "$ErrorNotifyLog
		exit 1
		
	fi
	# Задаем права на чтение и редактирование для всех (666) на логфайл ошибок нотификации резервного копирования
	`chmod 666 $ErrorNotifyLog`
	if [ $? -ne 0 ];
	then 
		echo "Не удается задать права на логфайл "$ErrorNotifyLog
		exit 1
	fi

	#Если в папке скрипта есть файл notify, то сообщаем о этом 
	#Если скрипт не нужен, то выбираем скрипт нотификации из папки nitify-dir и копируем его в папку скрипта
	#???

	#Задаем рекурсивно права на каталог установки скрипта резервного копирования и всех сопустствующих файлов
	#Для всех фалов кроме ./FileBackup права 600 владелец root
	#для ./FileBackup - 500 владелец $USER
	#Для папок 700
	echo "Задаем права на каталог установки скрипта: "$INSTALL_DIR
	if [ -d $INSTALL_DIR ] && [ -a $INSTALL_DIR/FileBackup ]
	then
		`chmod -R 600 $INSTALL_DIR`
		if [ $? -ne 0 ];
		then 
			echo "Не удается задать права каталог установки скрипта: "$INSTALL_DIR
			exit 1
		fi

		`chown -R $USER $INSTALL_DIR`
		if [ $? -ne 0 ];
		then 
			echo "Не удается задать владельцем каталога установки скрипта ("$INSTALL_DIR") пользователя root"
			exit 1
		fi

		`chmod 500 $INSTALL_DIR/FileBackup`
		if [ $? -ne 0 ];
		then 
			echo "Не удается задать права на выполнение для файла скрипта скрипта: "$INSTALL_DIR"/FileBackup"
			exit 1
		fi

		#Задаем права на папки
		`chmod 700 $INSTALL_DIR/notify-dir`
		if [ $? -ne 0 ];
		then 
			echo "Не удается задать права на выполнение для файла скрипта скрипта: "$INSTALL_DIR"/notify-dir"
			exit 1
		fi

		`chmod 700 $INSTALL_DIR/extscript`
		if [ $? -ne 0 ];
		then 
			echo "Не удается задать права на выполнение для файла скрипта скрипта: "$INSTALL_DIR"/extscript"
			exit 1
		fi

		`chmod 700 $INSTALL_DIR`
		if [ $? -ne 0 ];
		then 
			echo "Не удается задать права на выполнение для файла скрипта скрипта: "$INSTALL_DIR
			exit 1
		fi

	else
		echo "Не удалось правильно определить каталог установри скрипта: "$INSTALL_DIR
		exit 1
	fi


	#Помогаем повесить задание в CRON
	echo ""
	echo "Для выполнения этого скрипта требуется добавить задание cron от того пользователя,"
	echo "от которого будет выполняться."
	echo "Для выполнения задания на резервное копироваения ежедневно в 23.30 требуетcя в crontab"
	echo "добваить следующую строку:"
	echo "30 23 * * * "$INSTALL_DIR"/FileBackup"
	echo ""
	echo "Если надо скопируйте эту строку для того чтобы добавить ее в crontab"
	read -p "Для продолжения нажмите Enter и откроется crontab текущего пользователя "$USER" ..."
	`crontab -e`

	exit 0

		;;

	"2" )
	# 
	# Деинсталяция
	#

	#Указываем для дополнительных скриптов, что запускаемся в режиме деинсталяции
	WorkMission="deinstall"

	#Удаляем лог файлы скрипта резервного копирования
	if [ -a $INSTALL_DIR/config.cfg ]
	then
		. $INSTALL_DIR/config.cfg
		#Удаляем лог файлы скрипта резервного копирования
		if [ -a $BackupLog ];
		then
			`rm $BackupLog`
			if [ -a $BackupLog ]; then
				echo ""
				echo "Логфайл не удалось удалить "$BackupLog" - удалите его вручную"
			else
				echo ""
				echo "Логфайл "$BackupLog" успешно удален"
			fi
		else
			echo "Логфайл "$BackupLog" не обнаружен - поэтому удалить его не удалось"
		fi

		if [ -a $ErrorLog ]
		then
			`rm $ErrorLog`
			if [ -a $ErrorLog ]; then
				echo ""
				echo "Логфайл не удалось удалить "$ErrorLog" - удалите его вручную"
			else
				echo ""
				echo "Логфайл "$ErrorLog" успешно удален"
			fi
		else
			echo "Логфайл "$ErrorLog" не обнаружен - поэтому удалить его не удалось"
		fi

		if [ -a $ErrorNotifyLog ]
		then
			`rm $ErrorNotifyLog`
			if [ -a $ErrorNotifyLog ]; then
				echo ""
				echo "Логфайл не удалось удалить "$ErrorNotifyLog" - удалите его вручную"
			else
				echo ""
				echo "Логфайл "$ErrorNotifyLog" успешно удален"
			fi
		else
			echo "Логфайл "$ErrorNotifyLog" не обнаружен - поэтому удалить его не удалось"
		fi

		#Удаляем файл конфигурации
		`rm $INSTALL_DIR/config.cfg`
		if [ -a $INSTALL_DIR/config.cfg ]; then
			echo ""
			echo "Не удалось удалить "$INSTALL_DIR/config.cfg" - удалите его вручную"
		else
			echo ""
			echo "Файл "$INSTALL_DIR/config.cfg" успешно удален"
		fi

	else
		echo ""
		echo "Не обнаружен сайл настроек "$INSTALL_DIR/config.cfg" автоматическое удаление логфайлов невозможно - удалите их вручную"
		echo "Обычное расположение этих файлов следующее:"
		echo " - Логфайл сессии резервного копирования: "$BackupLogDef
		echo " - Логфайл ошибок сессии резервного копирования: "$ErrorLogDef
		echo " - Логфайл ощибок доставки сообщений о сбоях скрипта резервного копирования: "$ErrorNotifyLogDef
		
	fi

	#Деинсталируем модуль уведомлений
	if [ -a $INSTALL_DIR/notify ]
	then
		. $INSTALL_DIR/notify
		`rm $INSTALL_DIR/notify`
		if [ -a $INSTALL_DIR/notify ]; then
			echo ""
			echo "Файл модуля нотификации не удалось удалить "$INSTALL_DIR/notify" - удалите его вручную"
		else
			echo ""
			echo "Файл модуля нотификации "$INSTALL_DIR/notify" успешно удален"
		fi
	else
		echo ""
		echo "Не обнаружен модуль нодификации "$INSTALL_DIR/notify" автоматическое удаление модуля нотификации невозможно."
	fi

	#Восстанавливаем права на основную папку скрипта
	#Задаем рекурсивно права на каталог установки скрипта резервного копирования и всех сопустствующих файлов
	#Для всех фалов права 770 
	echo "Задаем права на каталог установки скрипта: "$INSTALL_DIR
	if [ -d $INSTALL_DIR ] && [ -a $INSTALL_DIR/FileBackup ]
	then
		`chmod -R 770 $INSTALL_DIR`
		if [ $? -ne 0 ];
		then 
			echo "Не удается задать права каталог установки скрипта: "$INSTALL_DIR
			exit 1
		fi

	else
		echo "Не удалось правильно определить каталог установри скрипта: "$INSTALL_DIR
		exit 1
	fi

	
		;;
esac

echo ""
echo "Завершено"












